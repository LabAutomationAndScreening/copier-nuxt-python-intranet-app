# Questions managed by upstream template
repo_name:
    type: str
    help: What is the name of the repository?

repo_org_name:
    type: str
    help: What's the organization or username that owns this repository (look in the URL)?

description:
    type: str
    help: What is the description of this repository?

is_open_source:
    type: bool
    help: Is this library open source?
    default: no

ssh_port_number:
    type: int
    help: What port should the devcontainer bind SSH to?
    default: "{{ ( (range(49152, 49752)   | list) + (range(49852, 50000)   | list) + (range(50060, 50160)   | list) + (range(50160, 50260)   | list) + (range(50260, 50360)   | list) + (range(50914, 51014)   | list) + (range(51114, 51214)   | list) + (range(51214, 51314)   | list) + (range(51314, 51414)   | list) + (range(51623, 51723)   | list) + (range(51723, 51823)   | list) + (range(65269, 65369)   | list) + (range(65369, 65469)   | list) ) | random }}"

use_windows_in_ci:
    type: bool
    help: Should CI in the instantiated template also use Windows runners?
    default: no

node_version:
    type: str
    help: What version of NodeJS is used for development?
    default: 22.14.0


install_aws_ssm_port_forwarding_plugin:
    type: bool
    help: Should the AWS SSM Port Forwarding Plugin be installed?
    default: no

python_version:
    type: str
    help: What version of Python is used for development?
    default: "3.12.7"

python_package_registry:
    type: str
    help: What registry should Python Packgaes be installed from?
    choices:
        - PyPI
        - AWS CodeArtifact
    default: PyPI


aws_identity_center_id:
    type: str
    help: What's the ID of your Organization's AWS Identity center, e.g. d-9145c20053?
    when: "{{ python_package_registry == 'AWS CodeArtifact' }}"

aws_org_home_region:
    type: str
    help: What is the home region of the AWS Organization (where all of the central infrastructure is deployed)?
    default: us-east-1
    when: "{{ python_package_registry == 'AWS CodeArtifact' }}"

aws_central_infrastructure_account_id:
    type: str
    help: What's the ID of your Organization's AWS Account containing Central Infrastructure (e.g. CodeArtifact)?
    when: "{{ python_package_registry == 'AWS CodeArtifact' }}"
    default: "000000000000"

core_infra_base_access_profile_name:
    type: str
    help: What's the AWS Identity Center Profile name for base access to the Central Infrastructure account (i.e. to read from CodeArtifact)?
    when: "{{ python_package_registry == 'AWS CodeArtifact' }}"
    default: CoreInfraBaseAccess





# Questions specific to this template

has_backend:
    type: bool
    help: Does this project have a backend?
    default: yes

create_docker_image_tar_artifact:
    type: bool
    help: During CI, should the docker images be bundled up into a tar file for manual deployment?
    default: no

push_to_ecr:
    type: bool
    help: During CI, should the docker images be pushed to an ECR?
    default: no

frontend_ecr_base_url:
    type: str
    help: What is the base URL of the ECR repository to push the frontend image to? (e.g. 123456789012.dkr.ecr.us-east-1.amazonaws.com)
    when: "{{ push_to_ecr }}"
    default: "{{ aws_central_infrastructure_account_id }}.dkr.ecr.{{ aws_org_home_region }}.amazonaws.com"

frontend_ecr_push_role_name:
    type: str
    help: What is the name of the role to assume for pushing the frontend image to ECR?
    when: "{{ push_to_ecr }}"
    default: "GHA-ECR-Push-{{ repo_name }}-frontend"

frontend_image_name:
    type: str
    help: What is the name of the frontend image?
    default: "{{ repo_name }}/frontend"

backend_ecr_base_url:
    type: str
    help: What is the base URL of the ECR repository to push the backend image to? (e.g. 123456789012.dkr.ecr.us-east-1.amazonaws.com)
    when: "{{ push_to_ecr and has_backend }}"
    default: "{{ frontend_ecr_base_url }}"

backend_ecr_push_role_name:
    type: str
    help: What is the name of the role to assume for pushing the backend image to ECR?
    when: "{{ push_to_ecr and has_backend }}"
    default: "GHA-ECR-Push-{{ repo_name }}-backend"

backend_image_name:
    type: str
    help: What is the name of the backend image?
    default: "{{ repo_name }}/backend"
    when: "{{ has_backend }}"

frontend_uses_graphql:
    type: bool
    help: Do you want the standalone frontend to make GraphQL calls?
    default: |-
        {% if has_backend == false -%}
            no
        {%- else -%}
            {#- This way if backend is already in use, then we'll automatically include graphql for this variable -#}
            yes
        {%- endif %}
    when: "{{ has_backend == false }}"

frontend_deployed_port_number:
    type: int
    help: What port should the frontend be deployed to?
    default: 3000

create_internal_docker_compose_network:
    type: bool
    help: Should an internal network be created for the Docker Compose services (this will block all access to anything outside the containers)?
    default: no

# Additional Settings
_min_copier_version: "9.4"

_subdirectory: template

_templates_suffix: .jinja

_exclude:
    - "copier.yml"

# adapted from https://github.com/copier-org/copier-templates-extensions#context-hook-extension
_jinja_extensions:
- copier_templates_extensions.TemplateExtensionLoader
- extensions/context.py:ContextUpdater
